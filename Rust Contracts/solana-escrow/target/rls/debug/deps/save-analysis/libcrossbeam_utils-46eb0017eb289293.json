{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8","program":"C:\\Users\\parke\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_utils","--edition=2018","C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=46eb0017eb289293","-C","extra-filename=-46eb0017eb289293","--out-dir","c:\\Users\\parke\\Dev\\Rust\\Rust\\Rust Contracts\\solana-escrow\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\parke\\Dev\\Rust\\Rust\\Rust Contracts\\solana-escrow\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\parke\\Dev\\Rust\\Rust\\Rust Contracts\\solana-escrow\\target\\rls\\debug\\deps\\libcfg_if-598cb98dfd9bd8bd.rmeta","--extern","lazy_static=c:\\Users\\parke\\Dev\\Rust\\Rust\\Rust Contracts\\solana-escrow\\target\\rls\\debug\\deps\\liblazy_static-dfaab2b7fea8037d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\parke\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\parke\\Dev\\Rust\\Rust\\Rust Contracts\\solana-escrow\\target\\rls\\debug\\deps\\libcrossbeam_utils-46eb0017eb289293.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[17112335218917241363,0]},"crate_root":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src","external_crates":[{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10096348926132587111,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[6130085985959571423,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10834538756664496827,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16052532455530240381,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9943859611570948275,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[2085945775536176072,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9544986399897469044,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17772512906340842432,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2307131819628043677,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8458190703300588207,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5770881746596919874,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[9756748775720564409,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13144887679811945557,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[7786367198952744552,0]}},{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","num":15,"id":{"name":"lazy_static","disambiguator":[1591903798235768688,0]}}],"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":4726,"byte_end":4736,"line_start":36,"line_end":36,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":4761,"byte_end":4774,"line_start":37,"line_end":37,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436078,"byte_end":12436084,"line_start":12,"line_end":12,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436086,"byte_end":12436094,"line_start":12,"line_end":12,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436154,"byte_end":12436165,"line_start":14,"line_end":14,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436167,"byte_end":12436187,"line_start":14,"line_end":14,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436189,"byte_end":12436210,"line_start":14,"line_end":14,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":470}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12436239,"byte_end":12436248,"line_start":15,"line_end":15,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":470}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":57},{"krate":0,"index":186},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":470},{"krate":0,"index":752}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":58},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":183}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5870,"byte_end":5880,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":96}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5149,"byte_end":5191,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5192,"byte_end":5195,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5196,"byte_end":5289,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5290,"byte_end":5293,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5294,"byte_end":5390,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5391,"byte_end":5484,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5485,"byte_end":5531,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5532,"byte_end":5535,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5536,"byte_end":5629,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5630,"byte_end":5633,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5634,"byte_end":5663,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5664,"byte_end":5729,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5730,"byte_end":5783,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5784,"byte_end":5837,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":5838,"byte_end":5858,"line_start":32,"line_end":32,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6646,"byte_end":6649,"line_start":60,"line_end":60,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"pub const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6423,"byte_end":6476,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6481,"byte_end":6484,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6489,"byte_end":6503,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6508,"byte_end":6511,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6516,"byte_end":6523,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6528,"byte_end":6572,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6577,"byte_end":6580,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6585,"byte_end":6616,"line_start":58,"line_end":58,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6621,"byte_end":6628,"line_start":59,"line_end":59,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7046,"byte_end":7056,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6760,"byte_end":6816,"line_start":66,"line_end":66,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6821,"byte_end":6824,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6829,"byte_end":6843,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6848,"byte_end":6851,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6856,"byte_end":6863,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6868,"byte_end":6912,"line_start":71,"line_end":71,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6917,"byte_end":6920,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6925,"byte_end":6956,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6961,"byte_end":6988,"line_start":74,"line_end":74,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6993,"byte_end":6996,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7001,"byte_end":7022,"line_start":76,"line_end":76,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7027,"byte_end":7034,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8337,"byte_end":8349,"line_start":110,"line_end":110,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"pub const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7113,"byte_end":7183,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7188,"byte_end":7191,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7196,"byte_end":7282,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7287,"byte_end":7379,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7384,"byte_end":7387,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7392,"byte_end":7406,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7411,"byte_end":7414,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7419,"byte_end":7426,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7431,"byte_end":7475,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7480,"byte_end":7483,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7488,"byte_end":7573,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7578,"byte_end":7611,"line_start":93,"line_end":93,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7616,"byte_end":7674,"line_start":94,"line_end":94,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7679,"byte_end":7682,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7687,"byte_end":7726,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7731,"byte_end":7747,"line_start":97,"line_end":97,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7752,"byte_end":7771,"line_start":98,"line_end":98,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7776,"byte_end":7781,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7786,"byte_end":7859,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7864,"byte_end":7920,"line_start":101,"line_end":101,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7925,"byte_end":7928,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7933,"byte_end":7992,"line_start":103,"line_end":103,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":7997,"byte_end":8052,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8057,"byte_end":8060,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8065,"byte_end":8157,"line_start":106,"line_end":106,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8162,"byte_end":8238,"line_start":107,"line_end":107,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8243,"byte_end":8307,"line_start":108,"line_end":108,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8312,"byte_end":8319,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8704,"byte_end":8709,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"pub fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8408,"byte_end":8446,"line_start":114,"line_end":114,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8451,"byte_end":8454,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8459,"byte_end":8473,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8478,"byte_end":8481,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8486,"byte_end":8493,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8498,"byte_end":8542,"line_start":119,"line_end":119,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8547,"byte_end":8550,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8555,"byte_end":8586,"line_start":121,"line_end":121,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8591,"byte_end":8594,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8599,"byte_end":8627,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8632,"byte_end":8647,"line_start":124,"line_end":124,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8652,"byte_end":8680,"line_start":125,"line_end":125,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8685,"byte_end":8692,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9264,"byte_end":9268,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"pub fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8923,"byte_end":8992,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":8997,"byte_end":9000,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9005,"byte_end":9019,"line_start":139,"line_end":139,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9024,"byte_end":9027,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9032,"byte_end":9039,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9044,"byte_end":9088,"line_start":142,"line_end":142,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9093,"byte_end":9096,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9101,"byte_end":9132,"line_start":144,"line_end":144,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9137,"byte_end":9140,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9145,"byte_end":9173,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9178,"byte_end":9207,"line_start":147,"line_end":147,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9212,"byte_end":9240,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9245,"byte_end":9252,"line_start":149,"line_end":149,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9675,"byte_end":9681,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9390,"byte_end":9459,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9464,"byte_end":9467,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9472,"byte_end":9486,"line_start":158,"line_end":158,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9491,"byte_end":9494,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9499,"byte_end":9506,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9511,"byte_end":9555,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9560,"byte_end":9563,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9568,"byte_end":9599,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9604,"byte_end":9607,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9612,"byte_end":9637,"line_start":165,"line_end":165,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9642,"byte_end":9649,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9654,"byte_end":9663,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10123,"byte_end":10127,"line_start":187,"line_end":187,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"pub fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9772,"byte_end":9854,"line_start":174,"line_end":174,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9859,"byte_end":9862,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9867,"byte_end":9881,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9886,"byte_end":9889,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9894,"byte_end":9901,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9906,"byte_end":9950,"line_start":179,"line_end":179,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9955,"byte_end":9958,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9963,"byte_end":9994,"line_start":181,"line_end":181,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9999,"byte_end":10023,"line_start":182,"line_end":182,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10028,"byte_end":10031,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10036,"byte_end":10060,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10065,"byte_end":10099,"line_start":185,"line_end":185,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10104,"byte_end":10111,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10467,"byte_end":10471,"line_start":204,"line_end":204,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"pub fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10223,"byte_end":10262,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10267,"byte_end":10270,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10275,"byte_end":10289,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10294,"byte_end":10297,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10302,"byte_end":10309,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10314,"byte_end":10358,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10363,"byte_end":10366,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10371,"byte_end":10402,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10407,"byte_end":10410,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10415,"byte_end":10443,"line_start":202,"line_end":202,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10448,"byte_end":10455,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11270,"byte_end":11286,"line_start":231,"line_end":231,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"pub fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10583,"byte_end":10660,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10665,"byte_end":10668,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10673,"byte_end":10767,"line_start":212,"line_end":212,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10772,"byte_end":10788,"line_start":213,"line_end":213,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10793,"byte_end":10796,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10801,"byte_end":10815,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10820,"byte_end":10823,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10828,"byte_end":10835,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10840,"byte_end":10867,"line_start":218,"line_end":218,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10872,"byte_end":10916,"line_start":219,"line_end":219,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10921,"byte_end":10924,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10929,"byte_end":10960,"line_start":221,"line_end":221,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10965,"byte_end":10968,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10973,"byte_end":11017,"line_start":223,"line_end":223,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11022,"byte_end":11050,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11055,"byte_end":11058,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11063,"byte_end":11107,"line_start":226,"line_end":226,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11112,"byte_end":11140,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11145,"byte_end":11152,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11204,"byte_end":11258,"line_start":230,"line_end":230,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12068,"byte_end":12084,"line_start":256,"line_end":256,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"pub fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11443,"byte_end":11520,"line_start":238,"line_end":238,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11525,"byte_end":11528,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11533,"byte_end":11625,"line_start":240,"line_end":240,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11630,"byte_end":11715,"line_start":241,"line_end":241,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11720,"byte_end":11723,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11728,"byte_end":11742,"line_start":243,"line_end":243,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11747,"byte_end":11750,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11755,"byte_end":11762,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11767,"byte_end":11811,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11816,"byte_end":11819,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11824,"byte_end":11855,"line_start":248,"line_end":248,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11860,"byte_end":11863,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11868,"byte_end":11917,"line_start":250,"line_end":250,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11922,"byte_end":11950,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11955,"byte_end":11958,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":11963,"byte_end":12011,"line_start":253,"line_end":253,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12016,"byte_end":12044,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12049,"byte_end":12056,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":13080,"byte_end":13092,"line_start":280,"line_end":280,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"pub fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) ->\nOption<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12221,"byte_end":12297,"line_start":260,"line_end":260,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12302,"byte_end":12400,"line_start":261,"line_end":261,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12405,"byte_end":12431,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12436,"byte_end":12439,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12444,"byte_end":12547,"line_start":264,"line_end":264,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12552,"byte_end":12652,"line_start":265,"line_end":265,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12657,"byte_end":12691,"line_start":266,"line_end":266,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12696,"byte_end":12699,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12704,"byte_end":12718,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12723,"byte_end":12726,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12731,"byte_end":12742,"line_start":270,"line_end":270,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12747,"byte_end":12791,"line_start":271,"line_end":271,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12796,"byte_end":12799,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12804,"byte_end":12835,"line_start":273,"line_end":273,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12840,"byte_end":12889,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12894,"byte_end":12949,"line_start":275,"line_end":275,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":12954,"byte_end":13009,"line_start":276,"line_end":276,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":13014,"byte_end":13042,"line_start":277,"line_end":277,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":13047,"byte_end":13054,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":13059,"byte_end":13068,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29405,"byte_end":29414,"line_start":740,"line_end":740,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"pub fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":28966,"byte_end":29044,"line_start":724,"line_end":724,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29049,"byte_end":29052,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29057,"byte_end":29071,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29076,"byte_end":29079,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29084,"byte_end":29091,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29096,"byte_end":29140,"line_start":729,"line_end":729,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29145,"byte_end":29148,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29153,"byte_end":29187,"line_start":731,"line_end":731,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29192,"byte_end":29195,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29200,"byte_end":29240,"line_start":733,"line_end":733,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29245,"byte_end":29276,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29281,"byte_end":29284,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29289,"byte_end":29330,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29335,"byte_end":29367,"line_start":737,"line_end":737,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29372,"byte_end":29379,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29384,"byte_end":29393,"line_start":739,"line_end":739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30101,"byte_end":30111,"line_start":764,"line_end":764,"column_start":12,"column_end":22},"name":"fetch_nand","qualname":"<AtomicCell<bool>>::fetch_nand","value":"pub fn fetch_nand(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"nand\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"nand\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29567,"byte_end":29646,"line_start":745,"line_end":745,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29651,"byte_end":29654,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29659,"byte_end":29673,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29678,"byte_end":29681,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29686,"byte_end":29693,"line_start":749,"line_end":749,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29698,"byte_end":29742,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29747,"byte_end":29750,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29755,"byte_end":29789,"line_start":752,"line_end":752,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29794,"byte_end":29797,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29802,"byte_end":29844,"line_start":754,"line_end":754,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29849,"byte_end":29880,"line_start":755,"line_end":755,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29885,"byte_end":29888,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(true), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29893,"byte_end":29934,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29939,"byte_end":29971,"line_start":758,"line_end":758,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29976,"byte_end":29979,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":29984,"byte_end":30027,"line_start":760,"line_end":760,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30032,"byte_end":30063,"line_start":761,"line_end":761,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30068,"byte_end":30075,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30080,"byte_end":30089,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30704,"byte_end":30712,"line_start":785,"line_end":785,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"pub fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30265,"byte_end":30342,"line_start":769,"line_end":769,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30347,"byte_end":30350,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30355,"byte_end":30369,"line_start":771,"line_end":771,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30374,"byte_end":30377,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30382,"byte_end":30389,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30394,"byte_end":30438,"line_start":774,"line_end":774,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30443,"byte_end":30446,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30451,"byte_end":30486,"line_start":776,"line_end":776,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30491,"byte_end":30494,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30499,"byte_end":30540,"line_start":778,"line_end":778,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30545,"byte_end":30577,"line_start":779,"line_end":779,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30582,"byte_end":30585,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30590,"byte_end":30630,"line_start":781,"line_end":781,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30635,"byte_end":30666,"line_start":782,"line_end":782,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30671,"byte_end":30678,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30683,"byte_end":30692,"line_start":784,"line_end":784,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31303,"byte_end":31312,"line_start":806,"line_end":806,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"pub fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30864,"byte_end":30942,"line_start":790,"line_end":790,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30947,"byte_end":30950,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30955,"byte_end":30969,"line_start":792,"line_end":792,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30974,"byte_end":30977,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30982,"byte_end":30989,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":30994,"byte_end":31038,"line_start":795,"line_end":795,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31043,"byte_end":31046,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31051,"byte_end":31085,"line_start":797,"line_end":797,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31090,"byte_end":31093,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31098,"byte_end":31139,"line_start":799,"line_end":799,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31144,"byte_end":31175,"line_start":800,"line_end":800,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31180,"byte_end":31183,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31188,"byte_end":31228,"line_start":802,"line_end":802,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31233,"byte_end":31265,"line_start":803,"line_end":803,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31270,"byte_end":31277,"line_start":804,"line_end":804,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31282,"byte_end":31291,"line_start":805,"line_end":805,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":41897,"byte_end":41910,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":41803,"byte_end":41886,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":41963,"byte_end":41966,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":41917,"byte_end":41953,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42804,"byte_end":42816,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"pub fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":172},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":41973,"byte_end":42041,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42046,"byte_end":42049,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42054,"byte_end":42127,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42132,"byte_end":42208,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42213,"byte_end":42284,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42289,"byte_end":42363,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42368,"byte_end":42391,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42396,"byte_end":42399,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42404,"byte_end":42479,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42484,"byte_end":42558,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42563,"byte_end":42597,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42602,"byte_end":42605,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42610,"byte_end":42682,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42687,"byte_end":42761,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":42766,"byte_end":42796,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49375,"byte_end":49386,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44570,"byte_end":44628,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44629,"byte_end":44632,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44633,"byte_end":44730,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44731,"byte_end":44827,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44828,"byte_end":44925,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":44926,"byte_end":45020,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45021,"byte_end":45037,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45038,"byte_end":45041,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45042,"byte_end":45066,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45067,"byte_end":45070,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45071,"byte_end":45149,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45150,"byte_end":45153,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45154,"byte_end":45203,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45204,"byte_end":45252,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45253,"byte_end":45277,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45278,"byte_end":45306,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45307,"byte_end":45310,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45311,"byte_end":45406,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45407,"byte_end":45498,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45499,"byte_end":45598,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45599,"byte_end":45634,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45635,"byte_end":45638,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45639,"byte_end":45735,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45736,"byte_end":45760,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45761,"byte_end":45764,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45765,"byte_end":45854,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45855,"byte_end":45858,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45859,"byte_end":45873,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45874,"byte_end":45877,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45878,"byte_end":45904,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45905,"byte_end":45908,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45909,"byte_end":45916,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45917,"byte_end":45954,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45955,"byte_end":45958,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":45959,"byte_end":46022,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46023,"byte_end":46072,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46073,"byte_end":46122,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46123,"byte_end":46126,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 64);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46127,"byte_end":46160,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 64, 0);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46161,"byte_end":46191,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 64, 0);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46192,"byte_end":46222,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46223,"byte_end":46230,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46231,"byte_end":46234,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46235,"byte_end":46329,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46330,"byte_end":46428,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46429,"byte_end":46458,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46459,"byte_end":46462,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46463,"byte_end":46470,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46471,"byte_end":46508,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46509,"byte_end":46548,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46549,"byte_end":46552,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46553,"byte_end":46574,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46575,"byte_end":46614,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46615,"byte_end":46654,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46655,"byte_end":46678,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46679,"byte_end":46684,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":46685,"byte_end":46692,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":47646,"byte_end":47662,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49768,"byte_end":49771,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"pub const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49535,"byte_end":49593,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49598,"byte_end":49601,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49606,"byte_end":49620,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49625,"byte_end":49628,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49633,"byte_end":49640,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49645,"byte_end":49682,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49687,"byte_end":49690,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49695,"byte_end":49738,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49743,"byte_end":49750,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50121,"byte_end":50131,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49847,"byte_end":49875,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49880,"byte_end":49883,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49888,"byte_end":49902,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49907,"byte_end":49910,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49915,"byte_end":49922,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49927,"byte_end":49964,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49969,"byte_end":49972,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49977,"byte_end":50020,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50025,"byte_end":50067,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50072,"byte_end":50097,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50102,"byte_end":50109,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53064,"byte_end":53071,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":234}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":50856,"byte_end":50903,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":50904,"byte_end":50907,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":50908,"byte_end":50990,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":50991,"byte_end":50994,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":50995,"byte_end":51094,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51095,"byte_end":51192,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51193,"byte_end":51287,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51288,"byte_end":51297,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51298,"byte_end":51301,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51302,"byte_end":51316,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51317,"byte_end":51320,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51321,"byte_end":51357,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51358,"byte_end":51361,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51362,"byte_end":51369,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51370,"byte_end":51403,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51404,"byte_end":51443,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51444,"byte_end":51488,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51489,"byte_end":51492,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51493,"byte_end":51547,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51548,"byte_end":51585,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51586,"byte_end":51600,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51601,"byte_end":51638,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51639,"byte_end":51724,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51725,"byte_end":51752,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51753,"byte_end":51766,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51767,"byte_end":51794,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51795,"byte_end":51804,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51805,"byte_end":51810,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51811,"byte_end":51818,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51819,"byte_end":51822,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51823,"byte_end":51874,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51875,"byte_end":51878,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51879,"byte_end":51886,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51887,"byte_end":51920,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51921,"byte_end":51959,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":51960,"byte_end":52004,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52005,"byte_end":52008,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52009,"byte_end":52047,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52048,"byte_end":52085,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52086,"byte_end":52121,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52122,"byte_end":52151,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52152,"byte_end":52161,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52162,"byte_end":52167,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52168,"byte_end":52175,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52176,"byte_end":52179,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52180,"byte_end":52272,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52273,"byte_end":52370,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52371,"byte_end":52388,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52389,"byte_end":52392,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52393,"byte_end":52400,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52401,"byte_end":52434,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52435,"byte_end":52473,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52474,"byte_end":52518,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52519,"byte_end":52539,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52540,"byte_end":52543,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52544,"byte_end":52586,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52587,"byte_end":52624,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52625,"byte_end":52660,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52661,"byte_end":52700,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52701,"byte_end":52732,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52733,"byte_end":52753,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52754,"byte_end":52787,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52788,"byte_end":52801,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52802,"byte_end":52811,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52812,"byte_end":52817,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52818,"byte_end":52825,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52826,"byte_end":52829,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52830,"byte_end":52873,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52874,"byte_end":52920,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52921,"byte_end":52956,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":52957,"byte_end":53006,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53007,"byte_end":53052,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53314,"byte_end":53317,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53117,"byte_end":53145,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53150,"byte_end":53153,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53158,"byte_end":53172,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53177,"byte_end":53180,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53185,"byte_end":53192,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53197,"byte_end":53230,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53235,"byte_end":53238,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53243,"byte_end":53276,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53281,"byte_end":53288,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53293,"byte_end":53302,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53599,"byte_end":53604,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"pub fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53380,"byte_end":53405,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53410,"byte_end":53413,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53418,"byte_end":53432,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53437,"byte_end":53440,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53445,"byte_end":53452,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53457,"byte_end":53490,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53495,"byte_end":53498,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53503,"byte_end":53536,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53541,"byte_end":53561,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53566,"byte_end":53573,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53578,"byte_end":53587,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54648,"byte_end":54652,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"pub fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53651,"byte_end":53685,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53690,"byte_end":53693,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53698,"byte_end":53791,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53796,"byte_end":53809,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53814,"byte_end":53817,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53822,"byte_end":53891,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53896,"byte_end":53899,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53904,"byte_end":53918,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53923,"byte_end":53926,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53931,"byte_end":53967,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53972,"byte_end":53975,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53980,"byte_end":53987,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53992,"byte_end":54025,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54030,"byte_end":54069,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54074,"byte_end":54118,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54123,"byte_end":54126,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54131,"byte_end":54185,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54190,"byte_end":54227,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54232,"byte_end":54246,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54251,"byte_end":54288,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54293,"byte_end":54378,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54383,"byte_end":54410,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54415,"byte_end":54428,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54433,"byte_end":54460,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54465,"byte_end":54474,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54479,"byte_end":54484,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54489,"byte_end":54492,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54497,"byte_end":54529,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54534,"byte_end":54570,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54575,"byte_end":54610,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54615,"byte_end":54622,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":54627,"byte_end":54636,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56711,"byte_end":56717,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"pub fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55056,"byte_end":55089,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55094,"byte_end":55097,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55102,"byte_end":55190,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55195,"byte_end":55198,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55203,"byte_end":55294,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55299,"byte_end":55358,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55363,"byte_end":55366,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55371,"byte_end":55442,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55447,"byte_end":55450,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55455,"byte_end":55546,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55551,"byte_end":55632,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55637,"byte_end":55640,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55645,"byte_end":55672,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55677,"byte_end":55720,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55725,"byte_end":55728,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55733,"byte_end":55747,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55752,"byte_end":55755,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55760,"byte_end":55811,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55816,"byte_end":55819,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55824,"byte_end":55831,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55836,"byte_end":55869,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55874,"byte_end":55897,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55902,"byte_end":55940,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55945,"byte_end":55989,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":55994,"byte_end":56014,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56019,"byte_end":56047,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56052,"byte_end":56055,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56060,"byte_end":56098,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56103,"byte_end":56140,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56145,"byte_end":56180,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56185,"byte_end":56214,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56219,"byte_end":56228,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56233,"byte_end":56238,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56243,"byte_end":56246,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56251,"byte_end":56300,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56305,"byte_end":56336,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56341,"byte_end":56344,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56349,"byte_end":56376,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56381,"byte_end":56431,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56436,"byte_end":56471,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56476,"byte_end":56483,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56488,"byte_end":56491,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56496,"byte_end":56538,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56543,"byte_end":56565,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56570,"byte_end":56611,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56616,"byte_end":56623,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56628,"byte_end":56631,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56636,"byte_end":56685,"line_start":206,"line_end":206,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":56690,"byte_end":56699,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58934,"byte_end":58946,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"pub fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57607,"byte_end":57698,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57703,"byte_end":57706,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57711,"byte_end":57725,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57730,"byte_end":57733,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57738,"byte_end":57830,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57835,"byte_end":57838,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57843,"byte_end":57850,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57855,"byte_end":57888,"line_start":241,"line_end":241,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57893,"byte_end":57916,"line_start":242,"line_end":242,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57921,"byte_end":57959,"line_start":243,"line_end":243,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":57964,"byte_end":58008,"line_start":244,"line_end":244,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58013,"byte_end":58033,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58038,"byte_end":58066,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58071,"byte_end":58074,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58079,"byte_end":58121,"line_start":248,"line_end":248,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58126,"byte_end":58163,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58168,"byte_end":58203,"line_start":250,"line_end":250,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58208,"byte_end":58247,"line_start":251,"line_end":251,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58252,"byte_end":58283,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58288,"byte_end":58308,"line_start":253,"line_end":253,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58313,"byte_end":58346,"line_start":254,"line_end":254,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58351,"byte_end":58364,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58369,"byte_end":58378,"line_start":256,"line_end":256,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58383,"byte_end":58388,"line_start":257,"line_end":257,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58393,"byte_end":58396,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58401,"byte_end":58450,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58455,"byte_end":58486,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58491,"byte_end":58526,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58531,"byte_end":58534,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58539,"byte_end":58566,"line_start":263,"line_end":263,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58571,"byte_end":58621,"line_start":264,"line_end":264,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58626,"byte_end":58661,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58666,"byte_end":58690,"line_start":266,"line_end":266,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58695,"byte_end":58702,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58707,"byte_end":58710,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58715,"byte_end":58757,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58762,"byte_end":58788,"line_start":270,"line_end":270,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58793,"byte_end":58834,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58839,"byte_end":58846,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58851,"byte_end":58854,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58859,"byte_end":58908,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":58913,"byte_end":58922,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":539},{"krate":0,"index":702},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12435729,"byte_end":12435767,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12435768,"byte_end":12435771,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12435772,"byte_end":12435817,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12435818,"byte_end":12435897,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\mod.rs","byte_start":12435898,"byte_end":12435978,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437904,"byte_end":12437910,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":502},{"krate":0,"index":503}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436474,"byte_end":12436505,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436506,"byte_end":12436509,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436510,"byte_end":12436597,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436598,"byte_end":12436601,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436602,"byte_end":12436696,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436697,"byte_end":12436751,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436752,"byte_end":12436755,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436756,"byte_end":12436853,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436854,"byte_end":12436885,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436886,"byte_end":12436889,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436890,"byte_end":12436988,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12436989,"byte_end":12437084,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437085,"byte_end":12437113,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437114,"byte_end":12437117,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437118,"byte_end":12437216,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437217,"byte_end":12437245,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437246,"byte_end":12437249,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437250,"byte_end":12437264,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437265,"byte_end":12437268,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437269,"byte_end":12437276,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437277,"byte_end":12437297,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437298,"byte_end":12437326,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437327,"byte_end":12437365,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437366,"byte_end":12437369,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437370,"byte_end":12437396,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437397,"byte_end":12437430,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437431,"byte_end":12437434,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437435,"byte_end":12437467,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437468,"byte_end":12437483,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437484,"byte_end":12437535,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437536,"byte_end":12437549,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437550,"byte_end":12437553,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437554,"byte_end":12437581,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437582,"byte_end":12437632,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437633,"byte_end":12437652,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437653,"byte_end":12437660,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437661,"byte_end":12437664,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437665,"byte_end":12437718,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437719,"byte_end":12437732,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437733,"byte_end":12437740,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437741,"byte_end":12437744,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437745,"byte_end":12437771,"line_start":49,"line_end":49,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437772,"byte_end":12437814,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437815,"byte_end":12437859,"line_start":51,"line_end":51,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437860,"byte_end":12437892,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438580,"byte_end":12438583,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"pub fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438392,"byte_end":12438419,"line_start":76,"line_end":76,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438424,"byte_end":12438427,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438432,"byte_end":12438446,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438451,"byte_end":12438454,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438459,"byte_end":12438466,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438471,"byte_end":12438509,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438514,"byte_end":12438517,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438522,"byte_end":12438548,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438553,"byte_end":12438560,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438565,"byte_end":12438568,"line_start":85,"line_end":85,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439035,"byte_end":12439039,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"pub fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438633,"byte_end":12438697,"line_start":90,"line_end":90,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438702,"byte_end":12438705,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438710,"byte_end":12438724,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438729,"byte_end":12438732,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438737,"byte_end":12438744,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438749,"byte_end":12438787,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438792,"byte_end":12438795,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438800,"byte_end":12438826,"line_start":97,"line_end":97,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438831,"byte_end":12438864,"line_start":98,"line_end":98,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438869,"byte_end":12438872,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438877,"byte_end":12438909,"line_start":100,"line_end":100,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438914,"byte_end":12438929,"line_start":101,"line_end":101,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438934,"byte_end":12438937,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438942,"byte_end":12438993,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438998,"byte_end":12439011,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439016,"byte_end":12439023,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439529,"byte_end":12439541,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"pub fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439100,"byte_end":12439193,"line_start":110,"line_end":110,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439198,"byte_end":12439201,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439206,"byte_end":12439220,"line_start":112,"line_end":112,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439225,"byte_end":12439228,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439233,"byte_end":12439240,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439245,"byte_end":12439273,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439278,"byte_end":12439316,"line_start":116,"line_end":116,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439321,"byte_end":12439324,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439329,"byte_end":12439355,"line_start":118,"line_end":118,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439360,"byte_end":12439363,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439368,"byte_end":12439453,"line_start":120,"line_end":120,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439458,"byte_end":12439505,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439510,"byte_end":12439517,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440125,"byte_end":12440138,"line_start":141,"line_end":141,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"pub fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439634,"byte_end":12439727,"line_start":127,"line_end":127,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439732,"byte_end":12439735,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439740,"byte_end":12439754,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439759,"byte_end":12439762,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439767,"byte_end":12439774,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439779,"byte_end":12439818,"line_start":132,"line_end":132,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439823,"byte_end":12439861,"line_start":133,"line_end":133,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439866,"byte_end":12439869,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439874,"byte_end":12439900,"line_start":135,"line_end":135,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439905,"byte_end":12439968,"line_start":136,"line_end":136,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439973,"byte_end":12439976,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12439981,"byte_end":12440066,"line_start":138,"line_end":138,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440071,"byte_end":12440101,"line_start":139,"line_end":139,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440106,"byte_end":12440113,"line_start":140,"line_end":140,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440801,"byte_end":12440809,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"pub fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440227,"byte_end":12440281,"line_start":145,"line_end":145,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440286,"byte_end":12440289,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440294,"byte_end":12440385,"line_start":147,"line_end":147,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440390,"byte_end":12440393,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440398,"byte_end":12440412,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440417,"byte_end":12440420,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440425,"byte_end":12440432,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440437,"byte_end":12440475,"line_start":152,"line_end":152,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440480,"byte_end":12440483,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440488,"byte_end":12440514,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440519,"byte_end":12440552,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440557,"byte_end":12440560,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440565,"byte_end":12440597,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440602,"byte_end":12440617,"line_start":158,"line_end":158,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440622,"byte_end":12440673,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440678,"byte_end":12440691,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440696,"byte_end":12440703,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440708,"byte_end":12440711,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440716,"byte_end":12440742,"line_start":163,"line_end":163,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440747,"byte_end":12440789,"line_start":164,"line_end":164,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441153,"byte_end":12441161,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"pub fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440866,"byte_end":12440909,"line_start":169,"line_end":169,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440914,"byte_end":12440917,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440922,"byte_end":12440936,"line_start":171,"line_end":171,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440941,"byte_end":12440944,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440949,"byte_end":12440956,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12440961,"byte_end":12440999,"line_start":174,"line_end":174,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441004,"byte_end":12441007,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441012,"byte_end":12441038,"line_start":176,"line_end":176,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441043,"byte_end":12441077,"line_start":177,"line_end":177,"column_start":5,"column_end":39}},{"value":"/ # let _ = unsafe { Parker::from_raw(raw) };","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441082,"byte_end":12441129,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441134,"byte_end":12441141,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441657,"byte_end":12441665,"line_start":199,"line_end":199,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441244,"byte_end":12441287,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441292,"byte_end":12441295,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441300,"byte_end":12441312,"line_start":186,"line_end":186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441317,"byte_end":12441320,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441325,"byte_end":12441408,"line_start":188,"line_end":188,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441413,"byte_end":12441416,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441421,"byte_end":12441435,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441440,"byte_end":12441443,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441448,"byte_end":12441455,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441460,"byte_end":12441498,"line_start":193,"line_end":193,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441503,"byte_end":12441506,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441511,"byte_end":12441537,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441542,"byte_end":12441576,"line_start":196,"line_end":196,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441581,"byte_end":12441626,"line_start":197,"line_end":197,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441631,"byte_end":12441638,"line_start":198,"line_end":198,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442012,"byte_end":12442020,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":518}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441943,"byte_end":12442000,"line_start":213,"line_end":213,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442866,"byte_end":12442872,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"pub fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442136,"byte_end":12442198,"line_start":222,"line_end":222,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442203,"byte_end":12442206,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442211,"byte_end":12442303,"line_start":224,"line_end":224,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442308,"byte_end":12442316,"line_start":225,"line_end":225,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442321,"byte_end":12442324,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442329,"byte_end":12442343,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442348,"byte_end":12442351,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442356,"byte_end":12442363,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442368,"byte_end":12442388,"line_start":230,"line_end":230,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442393,"byte_end":12442421,"line_start":231,"line_end":231,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442426,"byte_end":12442464,"line_start":232,"line_end":232,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442469,"byte_end":12442472,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442477,"byte_end":12442503,"line_start":234,"line_end":234,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442508,"byte_end":12442541,"line_start":235,"line_end":235,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442546,"byte_end":12442549,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442554,"byte_end":12442581,"line_start":237,"line_end":237,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442586,"byte_end":12442636,"line_start":238,"line_end":238,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442641,"byte_end":12442660,"line_start":239,"line_end":239,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442665,"byte_end":12442672,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442677,"byte_end":12442680,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442685,"byte_end":12442738,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442743,"byte_end":12442756,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442761,"byte_end":12442768,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442773,"byte_end":12442776,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442781,"byte_end":12442807,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442812,"byte_end":12442854,"line_start":247,"line_end":247,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443265,"byte_end":12443273,"line_start":264,"line_end":264,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"pub fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442921,"byte_end":12442967,"line_start":252,"line_end":252,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442972,"byte_end":12442975,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442980,"byte_end":12442994,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442999,"byte_end":12443002,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443007,"byte_end":12443014,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443019,"byte_end":12443069,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443074,"byte_end":12443077,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443082,"byte_end":12443108,"line_start":259,"line_end":259,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443113,"byte_end":12443146,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443151,"byte_end":12443187,"line_start":261,"line_end":261,"column_start":5,"column_end":41}},{"value":"/ # let _ = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443192,"byte_end":12443241,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443246,"byte_end":12443253,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443843,"byte_end":12443851,"line_start":285,"line_end":285,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"pub unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443363,"byte_end":12443409,"line_start":268,"line_end":268,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443414,"byte_end":12443417,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443422,"byte_end":12443434,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443439,"byte_end":12443442,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443447,"byte_end":12443532,"line_start":272,"line_end":272,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443537,"byte_end":12443540,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443545,"byte_end":12443559,"line_start":274,"line_end":274,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443564,"byte_end":12443567,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443572,"byte_end":12443579,"line_start":276,"line_end":276,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443584,"byte_end":12443634,"line_start":277,"line_end":277,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443639,"byte_end":12443642,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443647,"byte_end":12443673,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443678,"byte_end":12443711,"line_start":280,"line_end":280,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443716,"byte_end":12443719,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443724,"byte_end":12443760,"line_start":282,"line_end":282,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443765,"byte_end":12443812,"line_start":283,"line_end":283,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443817,"byte_end":12443824,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451565,"byte_end":12451576,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449814,"byte_end":12449847,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449848,"byte_end":12449851,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449852,"byte_end":12449949,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449950,"byte_end":12449965,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449966,"byte_end":12449969,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12449970,"byte_end":12450067,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450068,"byte_end":12450166,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450167,"byte_end":12450239,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450240,"byte_end":12450243,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450244,"byte_end":12450335,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450336,"byte_end":12450435,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450436,"byte_end":12450514,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450515,"byte_end":12450518,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450519,"byte_end":12450604,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450605,"byte_end":12450698,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450699,"byte_end":12450702,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450703,"byte_end":12450718,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450719,"byte_end":12450722,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450723,"byte_end":12450818,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450819,"byte_end":12450914,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450915,"byte_end":12450965,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450966,"byte_end":12450969,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450970,"byte_end":12450984,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450985,"byte_end":12450988,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450989,"byte_end":12450996,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12450997,"byte_end":12451040,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451041,"byte_end":12451044,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451045,"byte_end":12451080,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451081,"byte_end":12451084,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451085,"byte_end":12451137,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451138,"byte_end":12451143,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451144,"byte_end":12451182,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451183,"byte_end":12451221,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451222,"byte_end":12451249,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451250,"byte_end":12451277,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451278,"byte_end":12451324,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451325,"byte_end":12451328,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451329,"byte_end":12451377,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451378,"byte_end":12451383,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451384,"byte_end":12451426,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451427,"byte_end":12451443,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451444,"byte_end":12451470,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451471,"byte_end":12451507,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451508,"byte_end":12451515,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451516,"byte_end":12451519,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451520,"byte_end":12451553,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452205,"byte_end":12452208,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"pub fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451993,"byte_end":12452038,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452043,"byte_end":12452046,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452051,"byte_end":12452065,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452070,"byte_end":12452073,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452078,"byte_end":12452085,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452090,"byte_end":12452133,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452138,"byte_end":12452141,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452146,"byte_end":12452181,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452186,"byte_end":12452193,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453181,"byte_end":12453191,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"pub fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452622,"byte_end":12452676,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452681,"byte_end":12452684,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452689,"byte_end":12452701,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452706,"byte_end":12452709,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452714,"byte_end":12452809,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452814,"byte_end":12452835,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452840,"byte_end":12452843,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452848,"byte_end":12452862,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452867,"byte_end":12452870,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452875,"byte_end":12452882,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452887,"byte_end":12452930,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452935,"byte_end":12452938,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452943,"byte_end":12452990,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12452995,"byte_end":12453000,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453005,"byte_end":12453047,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453052,"byte_end":12453087,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453092,"byte_end":12453097,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453102,"byte_end":12453157,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453162,"byte_end":12453169,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454168,"byte_end":12454179,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"pub fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453470,"byte_end":12453513,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453518,"byte_end":12453521,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453526,"byte_end":12453620,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453625,"byte_end":12453693,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453698,"byte_end":12453701,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453706,"byte_end":12453720,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453725,"byte_end":12453728,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453733,"byte_end":12453740,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453745,"byte_end":12453788,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453793,"byte_end":12453816,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453821,"byte_end":12453841,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453846,"byte_end":12453849,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453854,"byte_end":12453899,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453904,"byte_end":12453934,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453939,"byte_end":12453942,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453947,"byte_end":12453982,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453987,"byte_end":12454031,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454036,"byte_end":12454079,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454084,"byte_end":12454098,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454103,"byte_end":12454144,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454149,"byte_end":12454156,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454818,"byte_end":12454825,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454250,"byte_end":12454305,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454310,"byte_end":12454313,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454318,"byte_end":12454402,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454407,"byte_end":12454410,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454415,"byte_end":12454427,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454432,"byte_end":12454435,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454440,"byte_end":12454535,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454540,"byte_end":12454561,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454566,"byte_end":12454569,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454574,"byte_end":12454588,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454593,"byte_end":12454596,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454601,"byte_end":12454608,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454613,"byte_end":12454656,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454661,"byte_end":12454664,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454669,"byte_end":12454708,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454713,"byte_end":12454747,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454752,"byte_end":12454794,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12454799,"byte_end":12454806,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455945,"byte_end":12455953,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"pub fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455089,"byte_end":12455147,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455152,"byte_end":12455155,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455160,"byte_end":12455253,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455258,"byte_end":12455351,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455356,"byte_end":12455445,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455450,"byte_end":12455490,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455495,"byte_end":12455498,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455503,"byte_end":12455515,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455520,"byte_end":12455523,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455528,"byte_end":12455623,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455628,"byte_end":12455649,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455654,"byte_end":12455657,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455662,"byte_end":12455676,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455681,"byte_end":12455684,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455689,"byte_end":12455696,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455701,"byte_end":12455744,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455749,"byte_end":12455752,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455757,"byte_end":12455792,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455797,"byte_end":12455800,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455805,"byte_end":12455832,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455837,"byte_end":12455872,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455877,"byte_end":12455910,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455915,"byte_end":12455921,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12455926,"byte_end":12455933,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458254,"byte_end":12458258,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"pub fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12456972,"byte_end":12457060,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457065,"byte_end":12457068,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457073,"byte_end":12457164,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457169,"byte_end":12457263,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457268,"byte_end":12457363,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457368,"byte_end":12457411,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457416,"byte_end":12457419,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457424,"byte_end":12457494,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457499,"byte_end":12457502,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457507,"byte_end":12457519,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457524,"byte_end":12457527,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457532,"byte_end":12457627,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457632,"byte_end":12457653,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457658,"byte_end":12457661,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457666,"byte_end":12457678,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457683,"byte_end":12457686,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457691,"byte_end":12457781,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457786,"byte_end":12457789,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457794,"byte_end":12457808,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457813,"byte_end":12457816,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457821,"byte_end":12457828,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457833,"byte_end":12457876,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457881,"byte_end":12457904,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457909,"byte_end":12457929,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457934,"byte_end":12457937,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457942,"byte_end":12457987,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12457992,"byte_end":12458022,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458027,"byte_end":12458030,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458035,"byte_end":12458068,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458073,"byte_end":12458095,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458100,"byte_end":12458103,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458108,"byte_end":12458135,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458140,"byte_end":12458170,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458175,"byte_end":12458202,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458207,"byte_end":12458230,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12458235,"byte_end":12458242,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459923,"byte_end":12459932,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"pub fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459064,"byte_end":12459126,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459131,"byte_end":12459134,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459139,"byte_end":12459232,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459237,"byte_end":12459329,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459334,"byte_end":12459427,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459432,"byte_end":12459472,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459477,"byte_end":12459480,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459485,"byte_end":12459497,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459502,"byte_end":12459505,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459510,"byte_end":12459605,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459610,"byte_end":12459631,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459636,"byte_end":12459639,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459644,"byte_end":12459658,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459663,"byte_end":12459666,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459671,"byte_end":12459678,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459683,"byte_end":12459726,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459731,"byte_end":12459734,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459739,"byte_end":12459774,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459779,"byte_end":12459782,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459787,"byte_end":12459820,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459825,"byte_end":12459847,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459852,"byte_end":12459855,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459860,"byte_end":12459899,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12459904,"byte_end":12459911,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462720,"byte_end":12462725,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"pub fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12461619,"byte_end":12461711,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12461716,"byte_end":12461719,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12461724,"byte_end":12461815,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12461820,"byte_end":12461914,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12461919,"byte_end":12462014,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462019,"byte_end":12462062,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462067,"byte_end":12462070,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462075,"byte_end":12462148,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462153,"byte_end":12462156,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462161,"byte_end":12462173,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462178,"byte_end":12462181,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462186,"byte_end":12462281,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462286,"byte_end":12462307,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462312,"byte_end":12462315,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462320,"byte_end":12462332,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462337,"byte_end":12462340,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462345,"byte_end":12462435,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462440,"byte_end":12462443,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462448,"byte_end":12462462,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462467,"byte_end":12462470,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462475,"byte_end":12462482,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462487,"byte_end":12462530,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462535,"byte_end":12462538,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462543,"byte_end":12462578,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462583,"byte_end":12462586,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462591,"byte_end":12462629,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462634,"byte_end":12462645,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462650,"byte_end":12462653,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462658,"byte_end":12462696,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12462701,"byte_end":12462708,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465059,"byte_end":12465079,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464962,"byte_end":12465047,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465966,"byte_end":12465987,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465865,"byte_end":12465954,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470589,"byte_end":12470598,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":717}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469377,"byte_end":12469453,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469454,"byte_end":12469457,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469458,"byte_end":12469487,"line_start":9,"line_end":9,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469488,"byte_end":12469491,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469492,"byte_end":12469572,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469573,"byte_end":12469576,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469577,"byte_end":12469678,"line_start":13,"line_end":13,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469679,"byte_end":12469707,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469708,"byte_end":12469711,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469712,"byte_end":12469807,"line_start":16,"line_end":16,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469808,"byte_end":12469845,"line_start":17,"line_end":17,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469846,"byte_end":12469849,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469850,"byte_end":12469950,"line_start":19,"line_end":19,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12469951,"byte_end":12470022,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470023,"byte_end":12470026,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470027,"byte_end":12470041,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470042,"byte_end":12470045,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470046,"byte_end":12470053,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470054,"byte_end":12470095,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470096,"byte_end":12470116,"line_start":26,"line_end":26,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470117,"byte_end":12470120,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470121,"byte_end":12470152,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470153,"byte_end":12470183,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470184,"byte_end":12470187,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470188,"byte_end":12470207,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470208,"byte_end":12470262,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470263,"byte_end":12470291,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470292,"byte_end":12470295,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470296,"byte_end":12470327,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470328,"byte_end":12470356,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470357,"byte_end":12470360,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470361,"byte_end":12470413,"line_start":38,"line_end":38,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470414,"byte_end":12470435,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470436,"byte_end":12470447,"line_start":40,"line_end":40,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470448,"byte_end":12470453,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470454,"byte_end":12470457,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470458,"byte_end":12470514,"line_start":43,"line_end":43,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470515,"byte_end":12470529,"line_start":44,"line_end":44,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470530,"byte_end":12470537,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470538,"byte_end":12470541,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470542,"byte_end":12470577,"line_start":47,"line_end":47,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471190,"byte_end":12471193,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470962,"byte_end":12471030,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471035,"byte_end":12471038,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471043,"byte_end":12471057,"line_start":72,"line_end":72,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471062,"byte_end":12471065,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471070,"byte_end":12471077,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471082,"byte_end":12471123,"line_start":75,"line_end":75,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471128,"byte_end":12471131,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471136,"byte_end":12471166,"line_start":77,"line_end":77,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471171,"byte_end":12471178,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471793,"byte_end":12471797,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"pub fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471241,"byte_end":12471315,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471320,"byte_end":12471323,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471328,"byte_end":12471342,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471347,"byte_end":12471350,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471355,"byte_end":12471362,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471367,"byte_end":12471408,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471413,"byte_end":12471433,"line_start":89,"line_end":89,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471438,"byte_end":12471441,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471446,"byte_end":12471476,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471481,"byte_end":12471484,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471489,"byte_end":12471508,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471513,"byte_end":12471541,"line_start":94,"line_end":94,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471546,"byte_end":12471563,"line_start":95,"line_end":95,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471568,"byte_end":12471630,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471635,"byte_end":12471657,"line_start":97,"line_end":97,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471662,"byte_end":12471671,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471676,"byte_end":12471683,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471688,"byte_end":12471691,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471696,"byte_end":12471750,"line_start":101,"line_end":101,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471755,"byte_end":12471769,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12471774,"byte_end":12471781,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":756},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":795},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":809},{"krate":0,"index":843},{"krate":0,"index":848},{"krate":0,"index":811},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":831},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":836}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472774,"byte_end":12472827,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472828,"byte_end":12472831,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472832,"byte_end":12472910,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472911,"byte_end":12472914,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472915,"byte_end":12472922,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472923,"byte_end":12472955,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472956,"byte_end":12472959,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472960,"byte_end":12472982,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12472983,"byte_end":12473011,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473012,"byte_end":12473038,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473039,"byte_end":12473067,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473068,"byte_end":12473074,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473075,"byte_end":12473078,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473079,"byte_end":12473102,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473103,"byte_end":12473134,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473135,"byte_end":12473165,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473166,"byte_end":12473213,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473214,"byte_end":12473229,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473230,"byte_end":12473239,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473240,"byte_end":12473256,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473257,"byte_end":12473264,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473265,"byte_end":12473268,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473269,"byte_end":12473294,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473295,"byte_end":12473298,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473299,"byte_end":12473374,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473375,"byte_end":12473378,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473379,"byte_end":12473404,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473405,"byte_end":12473425,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473426,"byte_end":12473429,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473430,"byte_end":12473452,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473453,"byte_end":12473481,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473482,"byte_end":12473508,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473509,"byte_end":12473537,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473538,"byte_end":12473544,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473545,"byte_end":12473548,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473549,"byte_end":12473582,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473583,"byte_end":12473586,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473587,"byte_end":12473614,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473615,"byte_end":12473659,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473660,"byte_end":12473703,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473704,"byte_end":12473716,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473717,"byte_end":12473722,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473723,"byte_end":12473726,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473727,"byte_end":12473754,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473755,"byte_end":12473786,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473787,"byte_end":12473792,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473793,"byte_end":12473800,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473801,"byte_end":12473804,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473805,"byte_end":12473902,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473903,"byte_end":12473906,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473907,"byte_end":12473918,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473919,"byte_end":12473971,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12473972,"byte_end":12473999,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474000,"byte_end":12474008,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474009,"byte_end":12474045,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474046,"byte_end":12474121,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474122,"byte_end":12474129,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474130,"byte_end":12474140,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474141,"byte_end":12474188,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474189,"byte_end":12474197,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474198,"byte_end":12474268,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474269,"byte_end":12474276,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474277,"byte_end":12474280,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474281,"byte_end":12474378,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474379,"byte_end":12474458,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474459,"byte_end":12474462,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474463,"byte_end":12474562,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474563,"byte_end":12474589,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474590,"byte_end":12474593,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474594,"byte_end":12474623,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474624,"byte_end":12474627,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474628,"byte_end":12474718,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474719,"byte_end":12474813,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474814,"byte_end":12474909,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474910,"byte_end":12474913,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12474914,"byte_end":12475009,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475010,"byte_end":12475108,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475109,"byte_end":12475207,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475208,"byte_end":12475251,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475252,"byte_end":12475255,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475256,"byte_end":12475284,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475285,"byte_end":12475288,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475289,"byte_end":12475384,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475385,"byte_end":12475479,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475480,"byte_end":12475521,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475522,"byte_end":12475525,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475526,"byte_end":12475557,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475558,"byte_end":12475590,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475591,"byte_end":12475594,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475595,"byte_end":12475618,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475619,"byte_end":12475640,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475641,"byte_end":12475712,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475713,"byte_end":12475762,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475763,"byte_end":12475814,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475815,"byte_end":12475826,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475827,"byte_end":12475834,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475835,"byte_end":12475842,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475843,"byte_end":12475846,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475847,"byte_end":12475945,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12475946,"byte_end":12476006,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476007,"byte_end":12476010,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476011,"byte_end":12476018,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476019,"byte_end":12476051,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476052,"byte_end":12476055,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476056,"byte_end":12476079,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476080,"byte_end":12476111,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476112,"byte_end":12476133,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476134,"byte_end":12476209,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476210,"byte_end":12476261,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476262,"byte_end":12476273,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476274,"byte_end":12476290,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476291,"byte_end":12476298,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477221,"byte_end":12477226,"line_start":148,"line_end":148,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"pub fn scope<'env, F, R>(F) -> thread::Result<R> where F: FnOnce(&Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476570,"byte_end":12476615,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476616,"byte_end":12476619,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476620,"byte_end":12476716,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476717,"byte_end":12476810,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476811,"byte_end":12476908,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476909,"byte_end":12476962,"line_start":133,"line_end":133,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476963,"byte_end":12476966,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476967,"byte_end":12476981,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476982,"byte_end":12476985,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476986,"byte_end":12476993,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12476994,"byte_end":12477026,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477027,"byte_end":12477030,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477031,"byte_end":12477059,"line_start":140,"line_end":140,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477060,"byte_end":12477063,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477064,"byte_end":12477087,"line_start":142,"line_end":142,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477088,"byte_end":12477109,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477110,"byte_end":12477176,"line_start":144,"line_end":144,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477177,"byte_end":12477188,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477189,"byte_end":12477205,"line_start":146,"line_end":146,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12477206,"byte_end":12477213,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":795},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478536,"byte_end":12478541,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478491,"byte_end":12478524,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480327,"byte_end":12480332,"line_start":245,"line_end":245,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"pub fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478906,"byte_end":12478933,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478938,"byte_end":12478941,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478946,"byte_end":12479041,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479046,"byte_end":12479141,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479146,"byte_end":12479203,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479208,"byte_end":12479211,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479216,"byte_end":12479311,"line_start":213,"line_end":213,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479316,"byte_end":12479344,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479349,"byte_end":12479352,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479357,"byte_end":12479424,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479429,"byte_end":12479498,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479503,"byte_end":12479506,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479511,"byte_end":12479620,"line_start":219,"line_end":219,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479625,"byte_end":12479688,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479693,"byte_end":12479696,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479701,"byte_end":12479734,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479739,"byte_end":12479742,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479747,"byte_end":12479759,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479764,"byte_end":12479767,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479772,"byte_end":12479853,"line_start":226,"line_end":226,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479858,"byte_end":12479890,"line_start":227,"line_end":227,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479895,"byte_end":12479898,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479903,"byte_end":12479917,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479922,"byte_end":12479925,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479930,"byte_end":12479937,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479942,"byte_end":12479974,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479979,"byte_end":12479982,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12479987,"byte_end":12480010,"line_start":234,"line_end":234,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480015,"byte_end":12480049,"line_start":235,"line_end":235,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480054,"byte_end":12480104,"line_start":236,"line_end":236,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480109,"byte_end":12480123,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480128,"byte_end":12480139,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480144,"byte_end":12480147,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480152,"byte_end":12480203,"line_start":240,"line_end":240,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480208,"byte_end":12480249,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480254,"byte_end":12480282,"line_start":242,"line_end":242,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480287,"byte_end":12480303,"line_start":243,"line_end":243,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480308,"byte_end":12480315,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480957,"byte_end":12480964,"line_start":269,"line_end":269,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"pub fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480609,"byte_end":12480675,"line_start":256,"line_end":256,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480680,"byte_end":12480683,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480688,"byte_end":12480702,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480707,"byte_end":12480710,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480715,"byte_end":12480722,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480727,"byte_end":12480759,"line_start":261,"line_end":261,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480764,"byte_end":12480767,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480772,"byte_end":12480795,"line_start":263,"line_end":263,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480800,"byte_end":12480819,"line_start":264,"line_end":264,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480824,"byte_end":12480885,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480890,"byte_end":12480912,"line_start":266,"line_end":266,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480917,"byte_end":12480933,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12480938,"byte_end":12480945,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482407,"byte_end":12482426,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481279,"byte_end":12481325,"line_start":283,"line_end":283,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481326,"byte_end":12481329,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481330,"byte_end":12481370,"line_start":285,"line_end":285,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481371,"byte_end":12481374,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481375,"byte_end":12481453,"line_start":287,"line_end":287,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481454,"byte_end":12481538,"line_start":288,"line_end":288,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481539,"byte_end":12481542,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481543,"byte_end":12481638,"line_start":290,"line_end":290,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481639,"byte_end":12481686,"line_start":291,"line_end":291,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481687,"byte_end":12481690,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481691,"byte_end":12481787,"line_start":293,"line_end":293,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481788,"byte_end":12481883,"line_start":294,"line_end":294,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481884,"byte_end":12481895,"line_start":295,"line_end":295,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481896,"byte_end":12481899,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481900,"byte_end":12481914,"line_start":297,"line_end":297,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481915,"byte_end":12481918,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481919,"byte_end":12481926,"line_start":299,"line_end":299,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481927,"byte_end":12481959,"line_start":300,"line_end":300,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481960,"byte_end":12481963,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481964,"byte_end":12481987,"line_start":302,"line_end":302,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481988,"byte_end":12482007,"line_start":303,"line_end":303,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482008,"byte_end":12482066,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482067,"byte_end":12482089,"line_start":305,"line_end":305,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482090,"byte_end":12482106,"line_start":306,"line_end":306,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482107,"byte_end":12482114,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482115,"byte_end":12482118,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482119,"byte_end":12482158,"line_start":309,"line_end":309,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482159,"byte_end":12482210,"line_start":310,"line_end":310,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482211,"byte_end":12482252,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482253,"byte_end":12482288,"line_start":312,"line_end":312,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482289,"byte_end":12482337,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482338,"byte_end":12482378,"line_start":314,"line_end":314,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483185,"byte_end":12483189,"line_start":343,"line_end":343,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"pub fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482567,"byte_end":12482604,"line_start":322,"line_end":322,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482609,"byte_end":12482612,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482617,"byte_end":12482665,"line_start":324,"line_end":324,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482670,"byte_end":12482673,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482678,"byte_end":12482751,"line_start":326,"line_end":326,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482756,"byte_end":12482759,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482764,"byte_end":12482778,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482783,"byte_end":12482786,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482791,"byte_end":12482798,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482803,"byte_end":12482835,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482840,"byte_end":12482869,"line_start":332,"line_end":332,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482874,"byte_end":12482877,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482882,"byte_end":12482905,"line_start":334,"line_end":334,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482910,"byte_end":12482929,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482934,"byte_end":12482976,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482981,"byte_end":12483052,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483057,"byte_end":12483079,"line_start":338,"line_end":338,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483084,"byte_end":12483100,"line_start":339,"line_end":339,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483105,"byte_end":12483112,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483117,"byte_end":12483120,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483125,"byte_end":12483173,"line_start":342,"line_end":342,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483894,"byte_end":12483904,"line_start":368,"line_end":368,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"pub fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483325,"byte_end":12483375,"line_start":348,"line_end":348,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483380,"byte_end":12483383,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483388,"byte_end":12483428,"line_start":350,"line_end":350,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483433,"byte_end":12483436,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483441,"byte_end":12483523,"line_start":352,"line_end":352,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483528,"byte_end":12483531,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483536,"byte_end":12483550,"line_start":354,"line_end":354,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483555,"byte_end":12483558,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483563,"byte_end":12483570,"line_start":356,"line_end":356,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483575,"byte_end":12483607,"line_start":357,"line_end":357,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483612,"byte_end":12483615,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483620,"byte_end":12483643,"line_start":359,"line_end":359,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483648,"byte_end":12483667,"line_start":360,"line_end":360,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483672,"byte_end":12483706,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483711,"byte_end":12483769,"line_start":362,"line_end":362,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483774,"byte_end":12483796,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483801,"byte_end":12483817,"line_start":364,"line_end":364,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483822,"byte_end":12483829,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483834,"byte_end":12483837,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12483842,"byte_end":12483882,"line_start":367,"line_end":367,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485180,"byte_end":12485185,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"pub fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: FnOnce(&Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484045,"byte_end":12484096,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484101,"byte_end":12484104,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484109,"byte_end":12484204,"line_start":375,"line_end":375,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484209,"byte_end":12484237,"line_start":376,"line_end":376,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484242,"byte_end":12484245,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484250,"byte_end":12484337,"line_start":378,"line_end":378,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484342,"byte_end":12484345,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484350,"byte_end":12484362,"line_start":380,"line_end":380,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484367,"byte_end":12484370,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484375,"byte_end":12484436,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484441,"byte_end":12484506,"line_start":383,"line_end":383,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484511,"byte_end":12484528,"line_start":384,"line_end":384,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484533,"byte_end":12484536,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484541,"byte_end":12484576,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484581,"byte_end":12484584,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484589,"byte_end":12484601,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484606,"byte_end":12484609,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484614,"byte_end":12484678,"line_start":390,"line_end":390,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484683,"byte_end":12484686,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484691,"byte_end":12484705,"line_start":392,"line_end":392,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484710,"byte_end":12484713,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484718,"byte_end":12484725,"line_start":394,"line_end":394,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484730,"byte_end":12484762,"line_start":395,"line_end":395,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484767,"byte_end":12484770,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484775,"byte_end":12484798,"line_start":397,"line_end":397,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484803,"byte_end":12484835,"line_start":398,"line_end":398,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484840,"byte_end":12484864,"line_start":399,"line_end":399,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484869,"byte_end":12484923,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484928,"byte_end":12484946,"line_start":401,"line_end":401,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484951,"byte_end":12484965,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484970,"byte_end":12484992,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12484997,"byte_end":12485000,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485005,"byte_end":12485056,"line_start":405,"line_end":405,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485061,"byte_end":12485102,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485107,"byte_end":12485135,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485140,"byte_end":12485156,"line_start":408,"line_end":408,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12485161,"byte_end":12485168,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487468,"byte_end":12487484,"line_start":476,"line_end":476,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487287,"byte_end":12487343,"line_start":472,"line_end":472,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487344,"byte_end":12487347,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487348,"byte_end":12487413,"line_start":474,"line_end":474,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487414,"byte_end":12487456,"line_start":475,"line_end":475,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488792,"byte_end":12488796,"line_start":518,"line_end":518,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"pub fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487880,"byte_end":12487938,"line_start":491,"line_end":491,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487943,"byte_end":12487946,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487951,"byte_end":12488004,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488009,"byte_end":12488012,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488017,"byte_end":12488029,"line_start":495,"line_end":495,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488034,"byte_end":12488037,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488042,"byte_end":12488136,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488141,"byte_end":12488188,"line_start":498,"line_end":498,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488193,"byte_end":12488196,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488201,"byte_end":12488215,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488220,"byte_end":12488223,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488228,"byte_end":12488235,"line_start":502,"line_end":502,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488240,"byte_end":12488272,"line_start":503,"line_end":503,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488277,"byte_end":12488280,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488285,"byte_end":12488308,"line_start":505,"line_end":505,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488313,"byte_end":12488382,"line_start":506,"line_end":506,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488387,"byte_end":12488452,"line_start":507,"line_end":507,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488457,"byte_end":12488460,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488465,"byte_end":12488527,"line_start":509,"line_end":509,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488532,"byte_end":12488565,"line_start":510,"line_end":510,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488570,"byte_end":12488599,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488604,"byte_end":12488607,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488612,"byte_end":12488674,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488679,"byte_end":12488712,"line_start":514,"line_end":514,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488717,"byte_end":12488747,"line_start":515,"line_end":515,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488752,"byte_end":12488768,"line_start":516,"line_end":516,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12488773,"byte_end":12488780,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489605,"byte_end":12489611,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"pub fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489244,"byte_end":12489290,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489295,"byte_end":12489298,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489303,"byte_end":12489317,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489322,"byte_end":12489325,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489330,"byte_end":12489337,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489342,"byte_end":12489374,"line_start":534,"line_end":534,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489379,"byte_end":12489382,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489387,"byte_end":12489410,"line_start":536,"line_end":536,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489415,"byte_end":12489487,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489492,"byte_end":12489560,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489565,"byte_end":12489581,"line_start":539,"line_end":539,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12489586,"byte_end":12489593,"line_start":540,"line_end":540,"column_start":5,"column_end":12}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12433108,"byte_end":12433115,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12434760,"byte_end":12434777,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12435102,"byte_end":12435119,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6198,"byte_end":6208,"line_start":42,"line_end":42,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6245,"byte_end":6255,"line_start":43,"line_end":43,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6310,"byte_end":6320,"line_start":46,"line_end":46,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6377,"byte_end":6387,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6403,"byte_end":6413,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9370,"byte_end":9380,"line_start":155,"line_end":155,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9752,"byte_end":9762,"line_start":173,"line_end":173,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10203,"byte_end":10213,"line_start":192,"line_end":192,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10563,"byte_end":10573,"line_start":209,"line_end":209,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":28943,"byte_end":28953,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31492,"byte_end":31502,"line_start":812,"line_end":812,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31611,"byte_end":31621,"line_start":818,"line_end":818,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31760,"byte_end":31770,"line_start":825,"line_end":825,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":34586,"byte_end":34596,"line_start":892,"line_end":892,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":44327,"byte_end":44336,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49439,"byte_end":49450,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49487,"byte_end":49498,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49514,"byte_end":49525,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50191,"byte_end":50202,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50308,"byte_end":50319,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50433,"byte_end":50444,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50643,"byte_end":50654,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53103,"byte_end":53110,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":59031,"byte_end":59038,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":59282,"byte_end":59289,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437998,"byte_end":12438004,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438026,"byte_end":12438032,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438379,"byte_end":12438385,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441831,"byte_end":12441837,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442070,"byte_end":12442078,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442103,"byte_end":12442111,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442121,"byte_end":12442129,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443995,"byte_end":12444003,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12444126,"byte_end":12444134,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12444412,"byte_end":12444417,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451779,"byte_end":12451790,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451843,"byte_end":12451854,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451893,"byte_end":12451904,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451945,"byte_end":12451956,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451972,"byte_end":12451983,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453449,"byte_end":12453460,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12463823,"byte_end":12463834,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464372,"byte_end":12464389,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464752,"byte_end":12464763,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464880,"byte_end":12464891,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465256,"byte_end":12465276,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465314,"byte_end":12465334,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465481,"byte_end":12465501,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465739,"byte_end":12465759,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466128,"byte_end":12466149,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466186,"byte_end":12466207,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466591,"byte_end":12466612,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466851,"byte_end":12466872,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12467004,"byte_end":12467025,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12467166,"byte_end":12467187,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12468485,"byte_end":12468497,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470740,"byte_end":12470749,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470946,"byte_end":12470955,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472116,"byte_end":12472125,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472334,"byte_end":12472343,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472559,"byte_end":12472568,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478863,"byte_end":12478868,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478888,"byte_end":12478893,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481165,"byte_end":12481170,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482527,"byte_end":12482546,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487208,"byte_end":12487224,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487259,"byte_end":12487275,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487850,"byte_end":12487866,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12490432,"byte_end":12490448,"line_start":564,"line_end":564,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12490857,"byte_end":12490873,"line_start":573,"line_end":573,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12491028,"byte_end":12491044,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":838}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":470}},{"kind":"Mod","span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":752}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12433108,"byte_end":12433115,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12434760,"byte_end":12434777,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\seq_lock.rs","byte_start":12435102,"byte_end":12435119,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":275},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6198,"byte_end":6208,"line_start":42,"line_end":42,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6245,"byte_end":6255,"line_start":43,"line_end":43,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6310,"byte_end":6320,"line_start":46,"line_end":46,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":8325}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6377,"byte_end":6387,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":8326}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":6403,"byte_end":6413,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9370,"byte_end":9380,"line_start":155,"line_end":155,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":9752,"byte_end":9762,"line_start":173,"line_end":173,"column_start":18,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10203,"byte_end":10213,"line_start":192,"line_end":192,"column_start":15,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":10563,"byte_end":10573,"line_start":209,"line_end":209,"column_start":20,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":28943,"byte_end":28953,"line_start":723,"line_end":723,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":94},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31492,"byte_end":31502,"line_start":812,"line_end":812,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31611,"byte_end":31621,"line_start":818,"line_end":818,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":31760,"byte_end":31770,"line_start":825,"line_end":825,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":94},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\atomic_cell.rs","byte_start":34586,"byte_end":34596,"line_start":892,"line_end":892,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\atomic\\consume.rs","byte_start":44327,"byte_end":44336,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":8892},"to":{"krate":0,"index":172}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49439,"byte_end":49450,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49487,"byte_end":49498,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":49514,"byte_end":49525,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50191,"byte_end":50202,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50308,"byte_end":50319,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50433,"byte_end":50444,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\cache_padded.rs","byte_start":50643,"byte_end":50654,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":444},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":53103,"byte_end":53110,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":59031,"byte_end":59038,"line_start":281,"line_end":281,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\backoff.rs","byte_start":59282,"byte_end":59289,"line_start":290,"line_end":290,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":233},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12437998,"byte_end":12438004,"line_start":58,"line_end":58,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438026,"byte_end":12438032,"line_start":60,"line_end":60,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12438379,"byte_end":12438385,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":501},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12441831,"byte_end":12441837,"line_start":207,"line_end":207,"column_start":21,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":501},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442070,"byte_end":12442078,"line_start":218,"line_end":218,"column_start":22,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442103,"byte_end":12442111,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12442121,"byte_end":12442129,"line_start":221,"line_end":221,"column_start":6,"column_end":14},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12443995,"byte_end":12444003,"line_start":292,"line_end":292,"column_start":21,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12444126,"byte_end":12444134,"line_start":298,"line_end":298,"column_start":16,"column_end":24},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":517},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\parker.rs","byte_start":12444412,"byte_end":12444417,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451779,"byte_end":12451790,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451843,"byte_end":12451854,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451893,"byte_end":12451904,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":8325}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451945,"byte_end":12451956,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":8326}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12451972,"byte_end":12451983,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12453449,"byte_end":12453460,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12463823,"byte_end":12463834,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464372,"byte_end":12464389,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":640},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464752,"byte_end":12464763,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12464880,"byte_end":12464891,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2910}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465256,"byte_end":12465276,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465314,"byte_end":12465334,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465481,"byte_end":12465501,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12465739,"byte_end":12465759,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":650},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466128,"byte_end":12466149,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466186,"byte_end":12466207,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466591,"byte_end":12466612,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12466851,"byte_end":12466872,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":9357}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12467004,"byte_end":12467025,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3215}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12467166,"byte_end":12467187,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":3228}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\sharded_lock.rs","byte_start":12468485,"byte_end":12468497,"line_start":602,"line_end":602,"column_start":15,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":697},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470740,"byte_end":12470749,"line_start":58,"line_end":58,"column_start":18,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2982}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12470946,"byte_end":12470955,"line_start":69,"line_end":69,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472116,"byte_end":12472125,"line_start":119,"line_end":119,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3239}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472334,"byte_end":12472343,"line_start":130,"line_end":130,"column_start":16,"column_end":25},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":2625}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\sync\\wait_group.rs","byte_start":12472559,"byte_end":12472568,"line_start":141,"line_end":141,"column_start":21,"column_end":30},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478863,"byte_end":12478868,"line_start":204,"line_end":204,"column_start":22,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":795},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12478888,"byte_end":12478893,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":795},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12481165,"byte_end":12481170,"line_start":277,"line_end":277,"column_start":21,"column_end":26},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":795},"to":{"krate":2,"index":9350}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12482527,"byte_end":12482546,"line_start":321,"line_end":321,"column_start":20,"column_end":39},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487208,"byte_end":12487224,"line_start":469,"line_end":469,"column_start":25,"column_end":41},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3004}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487259,"byte_end":12487275,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":3016}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12487850,"byte_end":12487866,"line_start":490,"line_end":490,"column_start":9,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":824},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12490432,"byte_end":12490448,"line_start":564,"line_end":564,"column_start":33,"column_end":49},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":5628}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12490857,"byte_end":12490873,"line_start":573,"line_end":573,"column_start":35,"column_end":51},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":824},"to":{"krate":1,"index":5632}},{"span":{"file_name":"C:\\Users\\parke\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-utils-0.8.8\\src\\thread.rs","byte_start":12491028,"byte_end":12491044,"line_start":581,"line_end":581,"column_start":24,"column_end":40},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":824},"to":{"krate":2,"index":9350}}]}